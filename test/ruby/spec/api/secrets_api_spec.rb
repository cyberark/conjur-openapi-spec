=begin
#Conjur

#This is an API definition for CyberArk DAP (part of AAM) and Conjur OSS v10+. You can find out more at [Conjur](https://www.conjur.org/) and [AAM](https://www.cyberark.com/products/privileged-account-security-solution/application-access-manager/) pages.

The version of the OpenAPI document: 0.0.1
Contact: conj_maintainers@cyberark.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SecretsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SecretsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SecretsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecretsApi' do
    it 'should create an instance of SecretsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SecretsApi)
    end
  end

  # unit tests for create_variable
  # Creates a secret value within the specified variable.
  # Creates a secret value within the specified Variable.  Note: Conjur will allow you to add a secret to any resource, but the best practice is to store and retrieve secret data only using Variable resources.
  # @param account Organization account name
  # @param kind Type of resource - in almost all cases this should be &#x60;variable&#x60;
  # @param identifier URL-encoded variable ID
  # @param body Secret data
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'create_variable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_variable
  # Fetches the value of a secret from the specified Variable.
  # Fetches the value of a secret from the specified Variable. The latest version will be retrieved unless the version parameter is specified. The twenty most recent secret versions are retained.  The secret data is returned in the response body.  Note: Conjur will allow you to add a secret to any resource, but the best practice is to store and retrieve secret data only using Variable resources.
  # @param account Organization account name
  # @param kind Type of resource - in almost all cases this should be &#x60;variable&#x60;
  # @param identifier URL-encoded variable ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :version (**Optional**) Version you want to retrieve (Conjur keeps the last 20 versions of a secret)
  # @return [String]
  describe 'get_variable test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_variables
  # Fetch multiple secrets
  # Fetches multiple secret values in one invocation. Itâ€™s faster to fetch secrets in batches than to fetch them one at a time.
  # @param variable_ids Comma-delimited, URL-encoded resource IDs of the variables.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_variables test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
