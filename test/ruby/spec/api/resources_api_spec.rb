=begin
#Conjur

#This is an API definition for CyberArk DAP (part of AAM) and Conjur OSS v10+. You can find out more at [Conjur](https://www.conjur.org/) and [AAM](https://www.cyberark.com/products/privileged-account-security-solution/application-access-manager/) pages.

The version of the OpenAPI document: 0.0.1
Contact: conj_maintainers@cyberark.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ResourcesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ResourcesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ResourcesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourcesApi' do
    it 'should create an instance of ResourcesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ResourcesApi)
    end
  end

  # unit tests for get_resource
  # Shows a description of a single resource.
  # Details about a single resource. ##### Permissions Required &#x60;read&#x60; privilege on the resource.
  # @param account Organization account name
  # @param kind Type of resource
  # @param identifier ID of the resource for which to get the information about
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :permitted_roles Lists the roles which have the named privilege on a resource.
  # @option opts [String] :privilege Level of privilege to filter on. Can only be used in combination with &#x60;permitted_roles&#x60; or &#x60;check&#x60; parameter.
  # @option opts [Boolean] :check Check whether a role has a privilege on a resource.
  # @option opts [String] :role Role to check privilege on. Can only be used in combination with &#x60;check&#x60; parameter.
  # @return [Object]
  describe 'get_resource test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_resources
  # Lists resources within an organization account.
  # Lists resources within an organization account.  If a &#x60;kind&#x60; query parameter is given, narrows results to only resources of that kind.  If a &#x60;limit&#x60; is given, returns no more than that number of results. Providing an &#x60;offset&#x60; skips a number of resources before returning the rest. In addition, providing an &#x60;offset&#x60; will give &#x60;limit&#x60; a default value of 10 if none other is provided. These two parameters can be combined to page through results.  If the parameter &#x60;count&#x60; is &#x60;true&#x60;, returns only the number of items in the list.  ##### Text search  If the &#x60;search&#x60; parameter is provided, narrows results to those pertaining to the search query. Search works across resource IDs and the values of annotations. It weighs results so that those with matching id or a matching value of an annotation called &#x60;name&#x60; appear first, then those with another matching annotation value, and finally those with a matching  &#x60;kind&#x60;.
  # @param account Organization account name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :kind Type of resource
  # @option opts [String] :search Filter resources based on this value by name
  # @option opts [Integer] :offset When listing resources, start at this item number.
  # @option opts [Integer] :limit When listing resources, return up to this many results.
  # @option opts [Boolean] :count When listing resources, if &#x60;true&#x60;, return only the count of the results.
  # @return [Object]
  describe 'get_resources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
