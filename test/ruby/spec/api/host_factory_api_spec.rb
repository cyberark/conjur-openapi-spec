=begin
#Conjur

#This is an API definition for CyberArk DAP (part of AAM) and Conjur OSS v10+. You can find out more at [Conjur](https://www.conjur.org/) and [AAM](https://www.cyberark.com/products/privileged-account-security-solution/application-access-manager/) pages.

The version of the OpenAPI document: 0.0.1
Contact: conj_maintainers@cyberark.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::HostFactoryApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'HostFactoryApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::HostFactoryApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of HostFactoryApi' do
    it 'should create an instance of HostFactoryApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::HostFactoryApi)
    end
  end

  # unit tests for create_host
  # Creates a Host using the Host Factory.
  # Creates a Host using the Host Factory and returns a JSON description of it.  Requires a host factory token, which can be created using the create tokens API. In practice, this token is usually provided automatically as part of Conjur integration with your host provisioning infrastructure.  Note: If the token was created with a CIDR restriction, you must make this API request from a whitelisted address.
  # @param id Identifier of the host to be created. It will be created within the account of the host factory.
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :annotations Annotations to apply to the new host
  # @return [Object]
  describe 'create_host test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_host_token
  # Creates one or more host identity tokens.
  # Creates one or more tokens which can be used to bootstrap host identity. Responds with a JSON document containing the tokens and their restrictions.  If the tokens are created with a CIDR restriction, Conjur will only accept them from the whitelisted IP ranges.  ##### Permissions required  &#x60;execute&#x60; privilege on the Host Factory.
  # @param expiration &#x60;ISO 8601 datetime&#x60; denoting a requested expiration time.
  # @param host_factory Fully qualified host factory ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count Number of host tokens to create
  # @option opts [Array<String>] :cidr Number of host tokens to create
  # @return [Object]
  describe 'create_host_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for revoke_host_token
  # Revokes a token, immediately disabling it.
  # Revokes a token, immediately disabling it.  ##### Permissions required  &#x60;update&#x60; privilege on the host factory.
  # @param token The host factory token to revoke
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body 
  # @return [nil]
  describe 'revoke_host_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
