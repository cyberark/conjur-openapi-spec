/*
 * Conjur
 * This is an API definition for CyberArk Conjur OSS. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.conjur.sdk.api;

import org.conjur.sdk.*;
import org.conjur.sdk.api.*;
import org.conjur.sdk.ApiException;
import org.conjur.sdk.model.AuthenticatorStatus;
import org.conjur.sdk.model.AuthenticatorsResponse;
import org.conjur.sdk.model.WhoAmI;
import org.junit.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StatusApi
 */
public class StatusApiTest extends ConfiguredTest {

    private final StatusApi api = new StatusApi();
    
    /**
     * Details about which authenticators are on the Conjur Server
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuthenticatorsTest() throws ApiException {
        String xRequestId = null;
        AuthenticatorsResponse response = api.getAuthenticators(xRequestId);

        String[] enabled = {"authn", "authn-oidc/test", "authn-ldap/test"};

        for (int i = 0; i < enabled.length; i++){
            Assert.assertTrue(response.getEnabled().contains(enabled[i]));
            Assert.assertTrue(response.getConfigured().contains(enabled[i]));
        }
    }
    
    /**
     * Details whether an authentication service has been configured properly
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServiceAuthenticatorStatusTest() throws ApiException {
        setupOIDCWebservice();
        String authenticator = "authn-oidc";
        String serviceId = "test";
        String xRequestId = "reqid";
        ApiResponse<AuthenticatorStatus> response = api.getServiceAuthenticatorStatusWithHttpInfo(authenticator, serviceId, account, xRequestId);

        Assert.assertEquals("ok", response.getData().getStatus());
        Assert.assertEquals(200, response.getStatusCode());
    }
    
    /**
     * Provides information about the client making an API request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void whoAmITest() throws ApiException {
        String xRequestId = null;
        ApiResponse<WhoAmI> response = api.whoAmIWithHttpInfo(xRequestId);

        Assert.assertEquals(200, response.getStatusCode());
        Assert.assertEquals(account, response.getData().getAccount());
        Assert.assertEquals(login, response.getData().getUsername());
    }   
}
