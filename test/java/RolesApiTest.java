/*
 * Conjur
 * This is an API definition for CyberArk Conjur OSS. You can find out more at [Conjur.org](https://www.conjur.org/).
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: conj_maintainers@cyberark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.conjur.sdk.api;

import org.conjur.sdk.*;
import org.conjur.sdk.api.*;
import org.conjur.sdk.model.*;
import org.conjur.sdk.ApiException;
import org.junit.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RolesApi
 */
public class RolesApiTest extends ConfiguredTest {

    private static final String ROLES_POLICY = String.join("\n",
              "- !layer testLayer",
              "- !group",
              "  id: userGroup",
              "  annotations:",
              "    editable: true",
              "- !group",
              "  id: anotherGroup",
              "  annotations:",
              "    editable: true",
              "- !user bob",
              "- !user alice"
            );

    private final RolesApi api = new RolesApi();

    @BeforeClass
    public static void setUpClass() throws ApiException {
        ConfiguredTest.setUpClass();
        PoliciesApi api = new PoliciesApi();
        api.replacePolicy(System.getenv("CONJUR_ACCOUNT"), "root", ROLES_POLICY, null);
    }

    /**
     * Update or modify an existing role membership
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addMemberToRoleTest() throws ApiException {
        String member = "dev:user:bob";
        String xRequestId = null;
        ApiResponse<?> response = api.addMemberToRoleWithHttpInfo(account, "group", "userGroup", "", member, xRequestId);

        Assert.assertEquals(204, response.getStatusCode());       
    }
    
    /**
     * Deletes an existing role membership
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeMemberFromRoleTest() throws ApiException {
        String kind = "group";
        String identifier = "userGroup";
        String members = "";
        String member = "dev:user:bob";
        String xRequestId = null;
        ApiResponse<?> response = api.removeMemberFromRoleWithHttpInfo(account, kind, identifier, members, member, xRequestId);

        Assert.assertEquals(204, response.getStatusCode());
    }
    
    /**
     * Get role information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showRoleTest() throws ApiException {
        String kind = "user";
        String identifier = "admin";
        String all = null;
        String memberships = null;
        String members = null;
        Integer offset = null;
        Integer limit = null;
        Boolean count = null;
        String search = null;
        String graph = null;
        String xRequestId = null;

        ApiResponse<Object> response = api.showRoleWithHttpInfo(account, kind, identifier, all, memberships, members, offset, limit, count, search, graph, xRequestId);

        Assert.assertEquals(200, response.getStatusCode());
        Object result = response.getData();
        Assert.assertEquals(result.getId(), "dev:user:admin");
    }
}
