#!/usr/bin/env bash

set -e
. test/python/k8s/utils

announce "Setting up test environment"
# Create KinD cluster
# Check if KinD cluster has already been created
if [ "$(kind get clusters | grep "^$KIND_CLUSTER_NAME$")" = "$KIND_CLUSTER_NAME" ]; then
    echo "KinD cluster '$KIND_CLUSTER_NAME' already exists. Skipping cluster creation."
else
    announce "Creating KinD Cluster"
    kind create cluster --name "${KIND_CLUSTER_NAME}"
fi

# Helm install Conjur
if has_namespace "$CONJUR_NAMESPACE"; then
    echo "Namespace '$CONJUR_NAMESPACE' exists, not going to create it."
else
    kubectl create ns "$CONJUR_NAMESPACE"
fi

if [ "$(helm list -q -n $CONJUR_NAMESPACE | grep "^$HELM_RELEASE$")" = "$HELM_RELEASE" ]; then
    echo "Helm upgrading existing Conjur cluster. Waiting for upgrade to complete."
    helm upgrade \
        -n "$CONJUR_NAMESPACE" \
        --set account.name="$CONJUR_ACCOUNT" \
        --set account.create="true" \
        --set authenticators="authn\,authn-k8s/$AUTHENTICATOR_ID" \
        --set logLevel="$CONJUR_LOG_LEVEL" \
        --set service.external.enabled="false" \
        --reuse-values \
        --wait \
        --timeout 300s \
        "$HELM_RELEASE" \
        "https://github.com/cyberark/conjur-oss-helm-chart/releases/download/v$VERSION/conjur-oss-$VERSION.tgz"
else
    echo "Helm install a Conjur cluster. Waiting for install to complete."
    data_key="$(docker run --rm cyberark/conjur data-key generate)"
    helm install \
        -n "$CONJUR_NAMESPACE" \
        --set dataKey="$data_key" \
        --set account.name="$CONJUR_ACCOUNT" \
        --set account.create="true" \
        --set authenticators="authn\,authn-k8s/$AUTHENTICATOR_ID" \
        --set logLevel="$CONJUR_LOG_LEVEL" \
        --set service.external.enabled="false" \
        --wait \
        --timeout 300s \
        "$HELM_RELEASE" \
        "https://github.com/cyberark/conjur-oss-helm-chart/releases/download/v$VERSION/conjur-oss-$VERSION.tgz"
fi

# Ensure authn-k8s enabled
authenticators="$(kubectl get secret \
                  -n $CONJUR_NAMESPACE \
                  $HELM_RELEASE-conjur-authenticators \
                  --template={{.data.key}} | base64 -d)"
if grep -q "$authenticators" <<< "$AUTHENTICATOR_ID"; then
  echo "Enabling authenticator ID $AUTHENTICATOR_ID for authn-k8s"
  helm upgrade \
       -n "$CONJUR_NAMESPACE" \
       --reuse-values \
       --set authenticators="authn\,authn-k8s/$AUTHENTICATOR_ID" \
       --set logLevel="$CONJUR_LOG_LEVEL" \
       --wait \
       --timeout 300s \
       "$HELM_RELEASE" \
       "https://github.com/cyberark/conjur-oss-helm-chart/releases/download/v$VERSION/conjur-oss-$VERSION.tgz"

else
  echo "Authenticator ID $AUTHENTICATOR_ID is already enabled for authn-k8s"
fi

wait_for_conjur_ready
