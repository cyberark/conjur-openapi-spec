version: '3'
services:
  pg:
    image: postgres:9.4
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  conjur:
    image: cyberark/conjur:edge
    command: server -a dev -f /policy/policy.yaml
    environment:
      CONJUR_DATA_KEY: 'OyXV68Mip14xj33huGaQKewmmS+gKtDlp6ECZ2iATpU='
      DATABASE_URL: postgres://postgres@pg/postgres
      RAILS_ENV: development
      CONJUR_AUTHENTICATORS: authn-ldap/test,authn-oidc/test,authn
      LDAP_URI: ldap://ldap-server:389
      LDAP_BASE: dc=conjur,dc=net
      LDAP_BINDDN: cn=admin,dc=conjur,dc=net
      LDAP_BINDPW: ldapsecret
      LDAP_FILTER: (uid=%s)
    ports:
      - "80:80"
    volumes:
      - ./test/config:/policy:ro
    depends_on:
      - pg
      - ldap-server
      - oidc-keycloak
    links:
      - oidc-keycloak:keycloak

  conjur-https:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./config/https/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/https/conjur.conf:/etc/nginx/sites-enabled/conjur.conf:ro
      - ./config/https/dhparams.pem:/etc/nginx/dhparams.pem:ro
      - ./config/https/conjur.crt:/cert/tls.crt:ro
      - ./config/https/conjur.key:/cert/tls.key:ro
      - ./config/https/ca.crt:/ca/tls.crt:ro
    depends_on:
      - conjur

  test-python:
    build:
      context: .
      dockerfile: test/Dockerfile.python
    command: ['sleep', '999d']
    environment:
      CONJUR_HTTP_APPLIANCE_URL: http://conjur
      CONJUR_HTTPS_APPLIANCE_URL: https://conjur-https
      CONJUR_ACCOUNT: dev
      CONJUR_AUTHN_LOGIN: admin
      CONJUR_AUTHN_API_KEY: Null
      CONJUR_CA_BUNDLE: /opt/conjur-openapi-spec/config/https/ca.crt
    depends_on:
      - conjur
      - conjur-https
    volumes:
      - .:/opt/conjur-openapi-spec
      - ./test/config/ldap/certs:/ldap-certs:ro

  test-api:
    build:
      context: .
      dockerfile: test/Dockerfile.api
    command: ['sleep', '999d']
    environment:
      CONJUR_CA_BUNDLE: /config/ca.crt
    depends_on:
      - conjur
      - conjur-https
    volumes:
      - ./config/https/:/config

  test-dotnet:
    image: mcr.microsoft.com/dotnet/sdk:2.1
    command: ['sleep', '999d']
    depends_on:
      - conjur
      - conjur-https
    environment:
      CONJUR_HTTP_APPLIANCE_URL: http://conjur
      CONJUR_HTTPS_APPLIANCE_URL: https://conjur-https
      CONJUR_ACCOUNT: dev
      CONJUR_AUTHN_LOGIN: admin
      CONJUR_AUTHN_API_KEY: Null
      CONJUR_CA_BUNDLE: /opt/conjur-openapi-spec/config/https/ca.crt
    volumes:
      - .:/opt/conjur-openapi-spec
      - ./test/config/ldap/certs:/ldap-certs:ro
    working_dir: /opt/conjur-openapi-spec

  cli:
    image: cyberark/conjur-cli:5
    entrypoint: sleep
    command: infinity
    environment:
      CONJUR_HTTP_APPLIANCE_URL: http://conjur
      CONJUR_HTTPS_APPLIANCE_URL: https://conjur-https
      CONJUR_ACCOUNT: dev
      CONJUR_AUTHN_LOGIN: admin
      CONJUR_CA_BUNDLE: /opt/conjur-openapi-spec/config/https/ca.crt
      CONJUR_AUTHN_API_KEY: Null
    volumes:
      - ./:/src
    depends_on:
      - conjur
      - conjur-https

  ldap-server:
    image: osixia/openldap
    command: --copy-service --loglevel debug
    hostname: ldap-server
    environment:
      LDAP_ORGANIZATION: CyberArk
      LDAP_DOMAIN: conjur.net
      LDAP_ADMIN_PASSWORD: ldapsecret
      LDAP_TLS_CA_CRT_FILENAME: "ca-chain.cert.pem"
      LDAP_TLS_CRT_FILENAME: "ldap-server.cert.pem"
      LDAP_TLS_KEY_FILENAME: "ldap-server.key.pem"
      LDAP_TLS_DH_PARAM_FILENAME: 'dhparam.pem'
      LDAP_TLS_VERIFY_CLIENT: try
    ports:
      - "389:389"
    volumes:
      - ./test/config/ldap:/container/service/slapd/assets/config/bootstrap/ldif/custom
      - ./test/config/ldap/certs:/container/service/slapd/assets/certs:ro

  oidc-keycloak:
    image: jboss/keycloak:4.3.0.Final
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=H2
      - KEYCLOAK_CLIENT_ID=conjurClient
      - KEYCLOAK_REDIRECT_URI=http://locallhost.com/
      - KEYCLOAK_CLIENT_SECRET=1234
      - KEYCLOAK_SCOPE=openid
      - KEYCLOAK_LOGLEVEL=ALL
    ports:
      - "7777:8080"
    volumes:
      - ./test/config/oidc:/scripts
      - ./test/config/oidc/keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml

  kong:
    image: kong
    command: tail -f /dev/null
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/opt/openapi/out/kong/kong.yml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
     - .:/opt/openapi

networks:
  default:
    external:
      name: openapi-spec
