
components:
  paths:
    Roles:
      get:
        tags:
        - "roles"
        summary: "Get role information"
        description: "Gets detailed information about a specific role, including the role members.


          If a role A is granted to a role B, then role A is said to have role B as a member. These relationships are described in the “members” portion of the returned JSON.


          openapi.yml#openapi.yml#openapi.yml#openapi.yml#openapi.yml# Listing members


          If `members` is provided, you will get the members of a role.


          If a `kind` query parameter is given, narrows results to only resources of that kind.


          If a `limit` is given, returns no more than that number of results. Providing an `offset` skips a number of resources before returning the rest. In addition, providing an `offset` will give limit a default value of 10 if none other is provided. These two parameters can be combined to page through results.


          If the parameter `count` is true, returns only the number of items in the list.


          openapi.yml#openapi.yml#openapi.yml#openapi.yml#openapi.yml# Text search


          If the search parameter is provided, narrows results to those pertaining to the search query. Search works across resource IDs and the values of annotations. It weights results so that those with matching id or a matching value of an annotation called name appear first, then those with another matching annotation value, and finally those with a matching kind.
          "
        operationId: "getRole"
        parameters:
        - name: "account"
          in: "path"
          description: "Organization account name"
          required: true
          schema:
            $ref: 'openapi.yml#/components/schemas/AccountName'
        - name: "kind"
          in: "path"
          description: "Type of resource"
          required: true
          example: user
          schema:
            $ref: 'openapi.yml#/components/schemas/Kind'
        - name: "identifier"
          in: "path"
          description: "ID of the role for which to get the information about"
          required: true
          example: "admin"
          schema:
            $ref: 'openapi.yml#/components/schemas/ResourceID'
        - name: "members"
          in: "query"
          description: "Comma-delimited, URL-encoded resource IDs of the variables."
          schema:
            type: boolean
            example: false
        - name: "offset"
          in: "query"
          description: "When listing members, start at this item number."
          schema:
            $ref: 'openapi.yml#/components/schemas/Offset'
        - name: "limit"
          in: "query"
          description: "When listing members, return up to this many results."
          schema:
            $ref: 'openapi.yml#/components/schemas/Limit'
        - name: "count"
          in: "query"
          description: "When listing members, if `true`, return only the count of members."
          schema:
            $ref: 'openapi.yml#/components/schemas/Count'

        responses:
          "201":
            description: "The response body contains the requested role(s)/member(s)"
            content:
              application/json:
                schema:
                  type: object
          "400":
            $ref: 'openapi.yml#/components/responses/BadRequest'
          "401":
            $ref: 'openapi.yml#/components/responses/UnauthorizedError'
          "403":
            $ref: 'openapi.yml#/components/responses/InadequatePrivileges'
          "404":
            $ref: 'openapi.yml#/components/responses/ResourceNotFound'
          "500":
            $ref: 'openapi.yml#/components/responses/InternalServerError'

        security:
          - conjurAuth: []
